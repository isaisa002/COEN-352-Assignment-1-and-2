package coen352.a1;

import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotEquals;



public class DictionaryJUnitTest {


    private static ADTDictionary<Integer, String> dict;

    @BeforeAll
    public static void setUp() {

        dict = new SLLDict<Integer, String>();

    }

    @Test
    void testClear() {

        dict.clear();
        assertEquals(0, dict.dictionarySize(), "clear failed, size is non zero");
        System.out.println("TEST CLEAR OK");
    }

    @Test
    void testInsert() {

        dict.clear();
        dict.insert(0, "red");
        dict.insert(1, "blue");
        dict.insert(2,"yellow");
        dict.insert(3, "grey");
        assertEquals(4, dict.dictionarySize(), "insert failed, size is not as expected");
        System.out.println("TEST INSERT OK");

    }

    @Test
    void testRemove() {


        dict.clear();
        dict.insert(0, "red");
        dict.insert(1, "blue");
        dict.insert(2,"yellow");
        dict.insert(3, "grey");
        dict.remove(0);

        //assertEquals("1:blue , 2:yellow , 3:grey ,", dict.toString());

        assertEquals("grey", dict.find(3), "remove failed");


        System.out.println("TEST REMOVE OK");

    }

    @Test
    void testRemoveAny() {
        dict.clear();
        dict.insert(0, "red");
        dict.insert(1, "blue");
        dict.insert(2,"yellow");
        dict.insert(3, "grey");
        assertNotEquals("3:grey", dict.removeAny(), "removeAny failed");
        System.out.println("TEST REMOVE ANY OK");


    }

    @Test
    void testFind() {

        System.out.println("TEST FIND");
        dict.clear();
        dict.insert(0, "red");
        dict.insert(1, "blue");
        dict.insert(2,"yellow");
        dict.insert(3, "grey");

        assertEquals("grey", dict.find(3), "find failed");
        System.out.println("TEST FIND OK");

    }

    @Test
    void testSize() {
        dict.clear();
        dict.insert(0, "red");


        assertEquals(1, dict.dictionarySize(), "size failed, size is not as expected");
        System.out.println("TEST SIZE OK");
    }

}

