package coen352.a1;



public class DLLDict<Key,ELEM> implements ADTDictionary<Key, ELEM> {



    private DoubleLinkedList<keyValuePair<Key,ELEM>> dictionary_list;

    //Constructors

    public DLLDict()
    {
        dictionary_list=new DoubleLinkedList<keyValuePair<Key, ELEM>>();
    }


    //Return element with key value k
    public ELEM find(Key k) {
        this.dictionary_list.moveToHead();
        for (int i = 0; i < this.dictionarySize(); i++)
        {
            keyValuePair<Key, ELEM> dict_elem = this.dictionary_list.getElement();
            if (k == dict_elem.getKey())
            {
                return dict_elem.getElement();
            }
            this.dictionary_list.moveToNext();
        }
        return null; // "k" does not appear in dictionary
    }

    public int dictionarySize() {
        return dictionary_list.numElements();
    }

    // Insert an element: append to list

    public void insert(Key k, ELEM elem)
    {
        keyValuePair<Key, ELEM> dict_elem = new keyValuePair<Key, ELEM>(k, elem);       //create element of dictIonary passed in kv format
        dictionary_list.append(dict_elem);
    }





    // Use sequential search to find the element to remove
    public ELEM remove(Key k) {
        ELEM removeItem = find(k);      //find function move current position to item object with key k & return it
        if (removeItem != null)         // if have found object with key
            dictionary_list.remove();    // remove element at current position from linked list
        return removeItem;               // return item removed
    }


    //Remove tail
    public ELEM removeAny()
    {
        //remove tail

        if (dictionarySize() != 0)
        {
            dictionary_list.moveToTail();                                    // set current to tail
            keyValuePair<Key, ELEM> removeItem = dictionary_list.remove();   // remove tail and return it to set removeitem to it
            return removeItem.getElement();                                     // return object / item removed
        } else {return null;}
    }






    //Remove all elements
    public void clear() {
        dictionary_list.clear();
    }









}
